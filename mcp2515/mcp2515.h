#ifndef MCP2515_MCP2515_H
#define MCP2515_MCP2515_H

#include <stdint.h>

#include "can.h"

#ifdef __cplusplus
#error "C++ is not supported"
#endif

/**
 * @brief Initialize MCP2515 CAN Controller
 *
 * @param timing Timing parameters generated by `can_generate_timing_params` function
 * @param spi_read_fcn Function to read 8 bits from SPI bus
 * @param spi_write_fcn Function to write 8 bits to SPI bus
 * @param cs_drive_fcn Function to drive SPI Chip Select signal to `state` logic level
 */
void mcp2515_can_init(can_timing_t *timing, uint8_t (*spi_read_fcn)(void),
					  void (*spi_write_fcn)(uint8_t data), void (*cs_drive_fcn)(uint8_t state));

/**
 * @brief Send a CAN message
 *
 * @param message CAN message to be sent
 */
void mcp2515_can_send(can_msg_t *message);

/**
 * @brief Check if CAN controller is ready to send a message
 *
 * @return return `true` if ready to send a message
 */
bool mcp2515_can_send_rdy(void);

/**
 * @brief Attempt to receive a CAN message
 *
 * @param message CAN message receive buffer
 * @return return `true` if a message is received
 */
bool mcp2515_can_receive(can_msg_t *message);

#endif
